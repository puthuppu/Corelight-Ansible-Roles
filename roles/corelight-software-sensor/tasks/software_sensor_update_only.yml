---
- name:             "software_sensor_update_only: Create corelight.cfg"
  template:
    src:            corelight.cfg.j2
    dest:           /etc/corelight.cfg
    owner:          root
    group:          root
  notify:           restart software sensor

- name:             "software_sensor_update_only: Create local.zeek"
  template:
    src:            local.zeek.j2
    dest:           /etc/corelight/local.zeek
    owner:          root
    group:          root
  notify:           restart software sensor

- name:             "software_sensor_update_only: Copy Input Framework files to sensor"
  copy:
    src:            "../../../common/files/input_files/"
    dest:           /etc/corelight/input_files/
    mode:           0644

- name:             "software_sensor_update_only: Copy Suricata Rule files to sensor"
  copy:
    src:            "../../../common/files/suricata_custom_rules/"
    dest:           "{{ suricata_rule_path }}"
    mode:           0644
  when:
    - suricata_enable | bool
    - suricata_update_enable == 'disabled'

- name:             "software_sensor_update_only: Refresh Script Index"
  command:          zkg refresh
  changed_when:     false

- name:             "software_sensor_update_only: Collect list of installed scripts"
  command:          zkg list
  register:         installed_scripts
  changed_when:     false

- debug:
    var:            installed_scripts.stdout_lines

- name:             "software_sensor_update_only: Install Scripts"
  expect:
    command:        zkg install --skiptests "{{ item.path }}"
    responses:
      Proceed(.*):  "y"
  with_items:       "{{ zeek_packages }}"
  when:
    - 'zeek_packages != None'
    - 'item.name not in installed_scripts.stdout'
  notify:           restart software sensor
  register:         install_depends

- name:             "install-pkg: Write depends to file"
  template:
    src:            "zkg_depends.j2"
    dest:           "{{ role_path }}/vars/depends_packages.json"
    mode:           0644
  changed_when:     false
  delegate_to:      localhost
  run_once:         true

- name:             "install-pkg: include depends"
  include_vars:
    file:           depends_packages.json
  delegate_to:      localhost
  run_once:         true

- name:             "install-pkg: Modify main-vars"
  lineinfile:
    path:           "common/main-vars.yml"
    line:           "    dependency:                           {{ item.dependency }}"
    insertafter:    "{{ item.name }}"
  with_items:       "{{ depend_packages }}"
  when:             'depend_packages != None'
  delegate_to:      localhost
  run_once:         true

- name:             "software_sensor_update_only: Include remove_packages tasks"
  include_tasks:    remove-packages.yml

- name:             "software_sensor_update_only: Upgrade Scripts"
  command:          zkg upgrade {{ item.name }} --force
  with_items:       "{{ zeek_packages }}"
  when:
    - 'item.auto_upgrade | bool'
    - 'item.name in installed_scripts.stdout'
  register:         results
  changed_when:
    - results.stdout != 'All packages already up-to-date.'
  notify:           restart software sensor

- name:             "software_sensor_update_only: Start and Enable Corelight Software Sensor"
  service:
    name:           corelight
    state:          started
    enabled:        yes
    daemon-reload:  yes
