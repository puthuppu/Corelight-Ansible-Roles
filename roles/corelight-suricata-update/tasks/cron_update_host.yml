---
# Set Cron Job facts
- name:                     "cron_update_host: Set Cron Job Facts Block"
  block:
    - name:                 Set_fact absent
      set_fact:
        enable_cron_job:    absent
      when:
        - (not enable_cron | bool or suricata_update_enable != 'local')
    - name:                 Set_fact present
      set_fact:
        enable_cron_job:     present
      when:
        - enable_cron | bool
        - suricata_update_enable == 'local'


- name:           "cron_update_host: Tasks when enable_cron true"
  block:
    - name:           "cron_update_host: Include Debian Cron Job Prep Tasks"
      include_tasks:  ./debian_cron.yml
      when:
        - ansible_os_family == 'Debian'
        - ansible_distribution != 'Ubuntu'

    - name:           "cron_update_host: Include Ubuntu Cron Job Prep Tasks"
      include_tasks:  ./ubuntu_cron.yml
      when:
        - ansible_distribution == 'Ubuntu'

    - name:           "cron_update_host: Include RedHat Cron Job Prep Tasks"
      include_tasks:  ./redhat_cron.yml
      when:
        - ansible_distribution == 'RedHat'

    - name:             "cron_update_host: Make sure Suricata-update/ansible path exists"
      file:
        path:           "{{ suricata_update_path }}/ansible"
        state:          directory
        mode:           '0755'
        owner:          "{{ ansible_user }}"
        group:          "{{ ansible_user }}"

    - name:             "cron_update_host: Make sure Cron Job log path exists"
      file:
        path:           "{{ cron_job_log_path }}"
        state:          directory
        mode:           '0755'
        owner:          "{{ ansible_user }}"
        group:          "{{ ansible_user }}"
  when:
    - enable_cron | bool

- name:           "cron_update_host: Tasks when ansible_connection != local"
  block:
    - name:             "cron_update_host: Clone Corelight Suricata-update Role Repo"
      git:
        repo:           https://github.com/corelight/Corelight-Ansible-Roles.git
        dest:           "{{ suricata_update_path }}/ansible"
        force:          yes
        # version:        dev
      become:           no

    - name:             "cron_update_host: Copy Ansible Config"
      copy:
        src:            "/etc/ansible/ansible.cfg"
        dest:           "/etc/ansible/ansible.cfg"

    - name:             "cron_update_host: Make sure vars path exists"
      file:
        path:           "{{ suricata_update_path }}/ansible/common"
        state:          directory
        mode:           '0755'
        owner:          "{{ ansible_user }}"
        group:          "{{ ansible_user }}"

    - name:             "cron_update_host: Copy Role vars"
      copy:
        src:            "{{ main_vars_path }}"
        dest:           "{{ suricata_update_path }}/ansible/common/main-vars.yml"
        owner:          "{{ ansible_user }}"
        group:          "{{ ansible_user }}"
        mode:           '0755'

    - name:             "cron_update_host: Copy Inventory file"
      copy:
        src:            "{{ inventory_path }}"
        dest:           "{{ suricata_update_path }}/ansible/common/inventory.yml"
        owner:          "{{ ansible_user }}"
        group:          "{{ ansible_user }}"
        mode:           '0755'

    - name:             "cron_update_host: Copy Secrets file"
      copy:
        src:            "{{ secrets_path }}"
        dest:           "{{ suricata_update_path }}/ansible/common/secrets.yml"
        owner:          "{{ ansible_user }}"
        group:          "{{ ansible_user }}"
        mode:           '0755'
        decrypt:        no

    - name:             "cron_update_host: Copy Secrets Password file"
      copy:
        src:            "{{ secrets_pswd_file }}"
        dest:           "{{ secrets_pswd_file }}"
        owner:          "{{ ansible_user }}"
        group:          "{{ ansible_user }}"
      no_log:           true

    - name:             "cron_update_host: Create Suricata-update remote cron file"
      template:
        src:            suricata-update-cron-remote.j2
        dest:           "{{ suricata_update_path }}/ansible/corelight-suricata-update-cron-job"
        owner:          "{{ ansible_user }}"
        group:          "{{ ansible_user }}"
        mode:           u=rwx,g=rx,o=rx
  when:
    - "ansible_connection != 'local'"
    - enable_cron | bool

- name:             "cron_update_host: Create Suricata-update local cron file"
  template:
    src:            suricata-update-cron.j2
    dest:           "{{ suricata_update_path }}/ansible/corelight-suricata-update-cron-job"
    owner:          "{{ ansible_user }}"
    group:          "{{ ansible_user }}"
    mode:           u=rwx,g=rx,o=rx
  when:
    - "ansible_connection == 'local'"
    - enable_cron | bool

- name:               "cron_update_host: Ensure Suricata-update runs daily on Cron Job host"
  cron:
    name:             suricata-update-all
    hour:             "{{ cron_job_hour }}"
    minute:           "{{ cron_job_minute }}"
    cron_file:        corelight-suricata-update-cron-job
    job:              "{{ suricata_update_path }}/ansible/corelight-suricata-update-cron-job"
    user:             "{{ ansible_user }}"
    state:            "{{ enable_cron_job }}"
